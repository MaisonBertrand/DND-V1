import{b as xe,c as ke,d as Te,a as C}from"./manualCombat-33808f22.js";import{H as $,M as B,S as ee,T as te,U as se,V as ne,W as ae,r as p,j as e,R as Le}from"./index-c208d5f4.js";class He{constructor(){this.scenes=new Map,this.currentScene=null,this.listeners=new Map}async createScene(a,l){try{const i={id:`scene_${Date.now()}`,title:l.title,description:l.description,mapLocation:l.mapLocation,objectives:l.objectives||[],problems:l.problems||[],createdAt:new Date,status:"active"},n=await $(a);if(!n)throw new Error("Campaign story not found");const o={...n,scenes:[...(n==null?void 0:n.scenes)||[],i],currentScene:i.id};return await B(n.id,o),i}catch(i){throw console.error("Error creating scene:",i),i}}async updateScene(a,l,i){try{const n=await $(a);if(!n)throw new Error("Campaign story not found");const o=(n==null?void 0:n.scenes)||[],d=o.findIndex(x=>x.id===l);if(d===-1)throw new Error("Scene not found");o[d]={...o[d],...i};const m={...n,scenes:o};return await B(n.id,m),o[d]}catch(n){throw console.error("Error updating scene:",n),n}}async getCurrentScene(a){try{const l=await $(a),i=l==null?void 0:l.currentScene;return i&&((l==null?void 0:l.scenes)||[]).find(o=>o.id===i)||null}catch(l){throw console.error("Error getting current scene:",l),l}}async addObjective(a,l,i){try{const n=await $(a);if(!n)throw new Error("Campaign story not found");const o=(n==null?void 0:n.scenes)||[],d=o.findIndex(w=>w.id===l);if(d===-1)throw new Error("Scene not found");const m={id:`obj_${Date.now()}`,text:i,completed:!1,createdAt:new Date};o[d].objectives=[...o[d].objectives||[],m];const x={...n,scenes:o};return await B(n.id,x),m}catch(n){throw console.error("Error adding objective:",n),n}}async addProblem(a,l,i){try{const n=await $(a);if(!n)throw new Error("Campaign story not found");const o=(n==null?void 0:n.scenes)||[],d=o.findIndex(w=>w.id===l);if(d===-1)throw new Error("Scene not found");const m={id:`prob_${Date.now()}`,text:i,solved:!1,createdAt:new Date};o[d].problems=[...o[d].problems||[],m];const x={...n,scenes:o};return await B(n.id,x),m}catch(n){throw console.error("Error adding problem:",n),n}}async updatePlayerPosition(a,l,i){try{const n=await $(a);if(!n)throw new Error("Campaign story not found");const o=(n==null?void 0:n.playerPositions)||{};o[l]={x:i.x,y:i.y,updatedAt:new Date};const d={...n,playerPositions:o};return await B(n.id,d),o[l]}catch(n){throw console.error("Error updating player position:",n),n}}async getPlayerPositions(a){try{const l=await $(a);return(l==null?void 0:l.playerPositions)||{}}catch(l){throw console.error("Error getting player positions:",l),l}}async updatePlayerView(a,l){try{const i=await $(a);if(!i)throw console.error("Campaign story not found for party:",a),new Error("Campaign story not found. Please try refreshing the page.");const n={...i,playerViewMode:l,lastViewUpdate:new Date};return await B(i.id,n),l}catch(i){throw console.error("Error updating player view:",i),i}}async getPlayerView(a){try{const l=await $(a);return(l==null?void 0:l.playerViewMode)||"hidden"}catch(l){throw console.error("Error getting player view:",l),l}}listenToPlayerView(a,l){const i=`playerView_${a}`;if(this.listeners.has(i)){const n=this.listeners.get(i);return n.callbacks.add(l),()=>{n.callbacks.delete(l),n.callbacks.size===0&&(n.unsubscribe(),this.listeners.delete(i))}}try{const n=ee(te(se,"campaignStories"),ne("partyId","==",a)),o=new Set([l]),d=ae(n,m=>{if(!m.empty){const w=m.docs[0].data(),P=(w==null?void 0:w.playerViewMode)||"hidden";o.forEach(R=>R(P))}},m=>{console.error("Error listening to player view:",m)});return this.listeners.set(i,{unsubscribe:d,callbacks:o}),()=>{o.delete(l),o.size===0&&(d(),this.listeners.delete(i))}}catch(n){return console.error("Error setting up player view listener:",n),null}}listenToCampaignStory(a,l){const i=`campaignStory_${a}`;if(this.listeners.has(i)){const n=this.listeners.get(i);return n.callbacks.add(l),()=>{n.callbacks.delete(l),n.callbacks.size===0&&(n.unsubscribe(),this.listeners.delete(i))}}try{const n=ee(te(se,"campaignStories"),ne("partyId","==",a)),o=new Set([l]),d=ae(n,m=>{if(m.empty)o.forEach(x=>x(null));else{const x=m.docs[0],w={id:x.id,...x.data()};o.forEach(P=>P(w))}},m=>{console.error("Error listening to campaign story:",m)});return this.listeners.set(i,{unsubscribe:d,callbacks:o}),()=>{o.delete(l),o.size===0&&(d(),this.listeners.delete(i))}}catch(n){return console.error("Error setting up campaign story listener:",n),null}}listenToPartyCharacters(a,l){const i=`partyCharacters_${a}`;if(this.listeners.has(i)){const n=this.listeners.get(i);return n.callbacks.add(l),()=>{n.callbacks.delete(l),n.callbacks.size===0&&(n.unsubscribe(),this.listeners.delete(i))}}try{const n=ee(te(se,"characters"),ne("partyId","==",a)),o=new Set([l]),d=ae(n,m=>{const x=[];m.forEach(w=>{x.push({id:w.id,...w.data()})}),o.forEach(w=>w(x))},m=>{console.error("Error listening to party characters:",m)});return this.listeners.set(i,{unsubscribe:d,callbacks:o}),()=>{o.delete(l),o.size===0&&(d(),this.listeners.delete(i))}}catch(n){return console.error("Error setting up party characters listener:",n),null}}}const le=new He;class $e{constructor(){this.xpThresholds={1:0,2:300,3:900,4:2700,5:6500,6:14e3,7:23e3,8:34e3,9:48e3,10:64e3,11:85e3,12:1e5,13:12e4,14:14e4,15:165e3,16:195e3,17:225e3,18:265e3,19:305e3,20:355e3},this.abilityScoreImprovementLevels=[4,8,12,16,19],this.spellProgression={Wizard:{cantrips:[3,3,3,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5],spellSlots:{1:[2,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],2:[0,0,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],3:[0,0,0,0,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],4:[0,0,0,0,0,0,1,2,3,3,3,3,3,3,3,3,3,3,3,3],5:[0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2],6:[0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1],7:[0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1],8:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1],9:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1]}},Sorcerer:{cantrips:[4,4,4,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6],spellSlots:{1:[2,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],2:[0,0,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],3:[0,0,0,0,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],4:[0,0,0,0,0,0,1,2,3,3,3,3,3,3,3,3,3,3,3,3],5:[0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2],6:[0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1],7:[0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1],8:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1],9:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1]}},Cleric:{cantrips:[3,3,3,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5],spellSlots:{1:[2,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],2:[0,0,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],3:[0,0,0,0,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],4:[0,0,0,0,0,0,1,2,3,3,3,3,3,3,3,3,3,3,3,3],5:[0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2],6:[0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1],7:[0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1],8:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1],9:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1]}},Druid:{cantrips:[2,2,2,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4],spellSlots:{1:[2,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],2:[0,0,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],3:[0,0,0,0,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],4:[0,0,0,0,0,0,1,2,3,3,3,3,3,3,3,3,3,3,3,3],5:[0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2],6:[0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1],7:[0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1],8:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1],9:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1]}},Bard:{cantrips:[2,2,2,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4],spellSlots:{1:[2,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],2:[0,0,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],3:[0,0,0,0,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],4:[0,0,0,0,0,0,1,2,3,3,3,3,3,3,3,3,3,3,3,3],5:[0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2],6:[0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1],7:[0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1],8:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1],9:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1]}},Warlock:{cantrips:[2,2,2,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4],spellSlots:{1:[1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],2:[0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],3:[0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0],4:[0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0],5:[0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0],6:[0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0],7:[0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0],8:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0],9:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0]}},Paladin:{cantrips:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],spellSlots:{1:[0,0,2,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],2:[0,0,0,0,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],3:[0,0,0,0,0,0,2,3,3,3,3,3,3,3,3,3,3,3,3,3],4:[0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2],5:[0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1]}},Ranger:{cantrips:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],spellSlots:{1:[0,0,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],2:[0,0,0,0,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],3:[0,0,0,0,0,0,2,3,3,3,3,3,3,3,3,3,3,3,3,3],4:[0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2],5:[0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1]}}}}calculateLevel(a){for(let l=20;l>=1;l--)if(a>=this.xpThresholds[l])return l;return 1}calculateXPForNextLevel(a){return a>=20?null:this.xpThresholds[a+1]}calculateXPProgress(a,l){const i=this.calculateXPForNextLevel(l);if(!i)return 100;const n=this.xpThresholds[l],o=a-n,d=i-n;return Math.min(100,o/d*100)}shouldLevelUp(a){const l=a.level||1;return this.calculateLevel(a.xp||0)>l}getLevelUpInfo(a){const l=a.level||1,i=this.calculateLevel(a.xp||0);if(i<=l)return null;const n=i,o=n-l;return{oldLevel:l,newLevel:n,levelsGained:o,hasAbilityScoreImprovement:this.abilityScoreImprovementLevels.includes(n),abilityScorePoints:this.getAbilityScorePoints(l,n),newSpellSlots:this.getSpellSlotsForLevel(a.class,n),oldSpellSlots:this.getSpellSlotsForLevel(a.class,l),canLearnSpells:this.canLearnSpells(a.class,n)}}getAbilityScorePoints(a,l){let i=0;for(let n=a+1;n<=l;n++)this.abilityScoreImprovementLevels.includes(n)&&(i+=2);return i}getSpellSlotsForLevel(a,l){var d;const i=this.spellProgression[a];if(!i)return{};const n={};for(let m=1;m<=9;m++){const x=((d=i.spellSlots[m])==null?void 0:d[l-1])||0;x>0&&(n[m]=x)}const o=i.cantrips[l-1]||0;return o>0&&(n[0]=o),n}canLearnSpells(a,l){if(!this.spellProgression[a])return!1;const n=this.getSpellSlotsForLevel(a,l),o=this.getSpellSlotsForLevel(a,l-1);for(let d=1;d<=9;d++)if((n[d]||0)>(o[d]||0))return!0;return!1}applyLevelUp(a,l,i={},n=[]){const o={...a};o.level=l.newLevel,Object.entries(i).forEach(([R,I])=>{o[R]&&(o[R]=Math.min(20,o[R]+I))}),n.length>0&&(o.spells=[...o.spells||[],...n]);const m={Barbarian:12,Fighter:10,Paladin:10,Ranger:10,Cleric:8,Druid:8,Monk:8,Rogue:8,Bard:8,Sorcerer:6,Warlock:8,Wizard:6}[o.class]||8,x=Math.floor((o.constitution-10)/2),w=Math.max(1,(m+x)*o.level),P=o.maxHp||w;return o.maxHp=w,o.hp=Math.min(o.hp+(w-P),w),o}getAvailableSpells(a,l){const{dmCatalogsService:i}=require("./dmCatalogs");try{const n=i.initializeSpells(),d={Wizard:["Evocation","Abjuration","Enchantment","Divination","Necromancy","Transmutation","Illusion","Conjuration"],Cleric:["Evocation","Abjuration","Enchantment","Divination","Necromancy","Transmutation"],Druid:["Evocation","Abjuration","Enchantment","Divination","Necromancy","Transmutation","Conjuration"],Bard:["Enchantment","Divination","Illusion","Transmutation"],Sorcerer:["Evocation","Abjuration","Enchantment","Divination","Necromancy","Transmutation","Illusion","Conjuration"],Warlock:["Enchantment","Evocation","Necromancy","Conjuration","Abjuration","Divination","Illusion","Transmutation"],Paladin:["Abjuration","Divination","Enchantment","Evocation"],Ranger:["Divination","Enchantment","Evocation","Transmutation"]}[a]||[];return n.filter(m=>m.level<=l&&d.includes(m.school))}catch(n){return console.error("Error loading spells:",n),{Wizard:[{name:"Magic Missile",level:1,school:"Evocation"},{name:"Shield",level:1,school:"Abjuration"},{name:"Burning Hands",level:1,school:"Evocation"},{name:"Charm Person",level:1,school:"Enchantment"},{name:"Detect Magic",level:1,school:"Divination"},{name:"Mage Armor",level:1,school:"Abjuration"},{name:"Sleep",level:1,school:"Enchantment"},{name:"Thunderwave",level:1,school:"Evocation"}],Cleric:[{name:"Cure Wounds",level:1,school:"Evocation"},{name:"Bless",level:1,school:"Enchantment"},{name:"Command",level:1,school:"Enchantment"},{name:"Detect Evil and Good",level:1,school:"Divination"},{name:"Guiding Bolt",level:1,school:"Evocation"},{name:"Healing Word",level:1,school:"Evocation"},{name:"Inflict Wounds",level:1,school:"Necromancy"},{name:"Sanctuary",level:1,school:"Abjuration"}]}[a]||[]}}}const We=new $e,K=[],Ve=N=>K.find(a=>a.id===N),Ae=N=>{const a=N.toLowerCase();return K.filter(l=>l.name.toLowerCase().includes(a)||l.type.toLowerCase().includes(a)||l.description&&l.description.toLowerCase().includes(a))},Ie=()=>K[Math.floor(Math.random()*K.length)];class ze{constructor(){this.monsters=xe,this.items=ke,this.spells=Te,this.npcs=K}searchMonsters(a){return C.searchMonsters(a)}getMonsterById(a){return C.getMonsterById(a)}getRandomMonster(){return C.getRandomMonster()}searchItems(a){return C.searchItems(a)}getItemById(a){return C.getItemById(a)}getRandomItem(){return C.getRandomItem()}searchSpells(a){return C.searchSpells(a)}getSpellById(a){return C.getSpellById(a)}getRandomSpell(){return C.getRandomSpell()}initializeSpells(){return this.spells}searchNPCs(a){return Ae(a)}getNPCById(a){return Ve(a)}getRandomNPC(){return Ie()}}const Ue=new ze,_e=N=>Math.floor((N-10)/2),qe=N=>N>=18?"text-purple-400":N>=16?"text-blue-400":N>=14?"text-green-400":N>=12?"text-yellow-400":N>=10?"text-orange-400":"text-red-400",Ke=N=>{switch(N==null?void 0:N.toLowerCase()){case"common":return"text-gray-300";case"uncommon":return"text-green-400";case"rare":return"text-blue-400";case"very rare":return"text-purple-400";case"legendary":return"text-orange-400";default:return"text-gray-300"}},Xe=N=>N>=0?`+${N}`:`${N}`;function Fe({isOpen:N,onClose:a,onRollComplete:l,diceNotation:i="1d20",rollType:n="Attack Roll",modifier:o=0}){const[d,m]=p.useState(null),[x,w]=p.useState(""),[P,R]=p.useState(!1),[I,G]=p.useState([]),[y,T]=p.useState(0),[v,H]=p.useState(null),E=(S=>{const f=S.match(/(\d+)d(\d+)([+-]\d+)?/);return f?{count:parseInt(f[1]),sides:parseInt(f[2]),modifier:f[3]?parseInt(f[3]):0}:{count:1,sides:20,modifier:0}})(i),W=()=>{const S=parseInt(x);if(isNaN(S)||S<1||S>E.sides){alert(`Please enter a valid number between 1 and ${E.sides}`);return}const f=S+E.modifier+o;H({roll:S,modifier:E.modifier+o,total:f,method:"manual"})},z=()=>{R(!0),G([]),T(0),H(null)},O=()=>{if(y<E.count){const S=Math.floor(Math.random()*E.sides)+1;G(f=>[...f,S]),T(f=>f+1)}else{const f=I.reduce((V,J)=>V+J,0)+E.modifier+o;H({rolls:I,modifier:E.modifier+o,total:f,method:"animated"}),R(!1)}},L=()=>{v&&(l(v),a())},g=()=>{m(null),w(""),R(!1),G([]),T(0),H(null)};return p.useEffect(()=>{N||g()},[N]),N?e.jsx("div",{className:"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4",children:e.jsxs("div",{className:"bg-slate-800 border border-slate-600 rounded-lg p-6 max-w-md w-full",children:[e.jsxs("div",{className:"flex items-center justify-between mb-4",children:[e.jsxs("h3",{className:"text-lg font-semibold text-slate-200",children:["🎲 ",n]}),e.jsx("button",{onClick:a,className:"text-slate-400 hover:text-slate-200 text-xl",children:"×"})]}),!d&&e.jsxs("div",{className:"space-y-4",children:[e.jsxs("p",{className:"text-slate-300 text-sm",children:["Roll ",i," ",o!==0&&`+ ${o}`]}),e.jsxs("div",{className:"grid grid-cols-2 gap-3",children:[e.jsxs("button",{onClick:()=>m("manual"),className:"p-4 bg-blue-600 hover:bg-blue-700 rounded-lg transition-colors",children:[e.jsx("div",{className:"text-2xl mb-2",children:"✏️"}),e.jsx("div",{className:"text-sm font-medium",children:"Manual Input"}),e.jsx("div",{className:"text-xs text-blue-200",children:"Roll physical dice and enter result"})]}),e.jsxs("button",{onClick:()=>m("animated"),className:"p-4 bg-green-600 hover:bg-green-700 rounded-lg transition-colors",children:[e.jsx("div",{className:"text-2xl mb-2",children:"🎲"}),e.jsx("div",{className:"text-sm font-medium",children:"Animated Roll"}),e.jsx("div",{className:"text-xs text-green-200",children:"Computer rolls dice for you"})]})]})]}),d==="manual"&&e.jsxs("div",{className:"space-y-4",children:[e.jsx("p",{className:"text-slate-300 text-sm",children:"Roll your physical dice and enter the result below:"}),e.jsxs("div",{className:"flex items-center gap-3",children:[e.jsx("input",{type:"number",min:"1",max:E.sides,value:x,onChange:S=>w(S.target.value),placeholder:`1-${E.sides}`,className:"flex-1 bg-slate-700 border border-slate-600 text-slate-200 px-3 py-2 rounded focus:outline-none focus:ring-2 focus:ring-blue-500"}),e.jsx("button",{onClick:W,disabled:!x,className:"bg-blue-600 hover:bg-blue-700 disabled:bg-slate-600 disabled:cursor-not-allowed text-white px-4 py-2 rounded transition-colors",children:"Submit"})]}),v&&e.jsxs("div",{className:"p-3 bg-slate-700 rounded border border-slate-600",children:[e.jsxs("div",{className:"text-sm text-slate-300",children:[e.jsxs("div",{children:["Roll: ",e.jsx("span",{className:"text-amber-400 font-bold",children:v.roll})]}),e.jsxs("div",{children:["Modifier: ",e.jsxs("span",{className:"text-slate-400",children:["+",v.modifier]})]}),e.jsxs("div",{className:"text-lg font-bold text-green-400",children:["Total: ",v.total]})]}),e.jsx("button",{onClick:L,className:"w-full mt-3 bg-green-600 hover:bg-green-700 text-white py-2 rounded transition-colors",children:"Use This Result"})]})]}),d==="animated"&&!P&&!v&&e.jsxs("div",{className:"space-y-4",children:[e.jsx("p",{className:"text-slate-300 text-sm",children:"Click the dice to roll them one by one:"}),e.jsx("div",{className:"grid grid-cols-5 gap-2",children:Array.from({length:E.count},(S,f)=>e.jsx("button",{onClick:z,className:"w-12 h-12 bg-amber-600 hover:bg-amber-700 rounded-lg flex items-center justify-center text-white font-bold text-lg transition-colors",children:"🎲"},f))})]}),d==="animated"&&P&&e.jsxs("div",{className:"space-y-4",children:[e.jsxs("p",{className:"text-slate-300 text-sm",children:["Rolling dice ",y+1," of ",E.count,"..."]}),e.jsx("div",{className:"grid grid-cols-5 gap-2",children:Array.from({length:E.count},(S,f)=>e.jsx("div",{className:`w-12 h-12 rounded-lg flex items-center justify-center font-bold text-lg transition-all duration-500 ${f<y?"bg-green-600 text-white":f===y?"bg-amber-600 text-white animate-pulse":"bg-slate-600 text-slate-400"}`,children:f<y?I[f]:f===y?"?":"🎲"},f))}),e.jsx("button",{onClick:O,className:"w-full bg-amber-600 hover:bg-amber-700 text-white py-2 rounded transition-colors",children:"Roll Next Die"})]}),d==="animated"&&v&&e.jsxs("div",{className:"space-y-4",children:[e.jsx("div",{className:"p-3 bg-slate-700 rounded border border-slate-600",children:e.jsxs("div",{className:"text-sm text-slate-300",children:[e.jsxs("div",{children:["Rolls: ",e.jsx("span",{className:"text-amber-400 font-bold",children:v.rolls.join(", ")})]}),e.jsxs("div",{children:["Modifier: ",e.jsxs("span",{className:"text-slate-400",children:["+",v.modifier]})]}),e.jsxs("div",{className:"text-lg font-bold text-green-400",children:["Total: ",v.total]})]})}),e.jsx("button",{onClick:L,className:"w-full bg-green-600 hover:bg-green-700 text-white py-2 rounded transition-colors",children:"Use This Result"})]}),d&&!v&&e.jsx("button",{onClick:()=>m(null),className:"w-full mt-4 bg-slate-600 hover:bg-slate-700 text-white py-2 rounded transition-colors",children:"Back to Method Selection"})]})}):null}const Oe=Le.memo(function({partyId:a,partyCharacters:l,onCombatStart:i}){var me,ue;p.useEffect(()=>(console.log("DMCombatView: Component mounted for partyId:",a),()=>{console.log("DMCombatView: Component unmounted for partyId:",a)}),[a]);const[n,o]=p.useState([]),[d,m]=p.useState([]),[x,w]=p.useState({width:12,height:8}),[P,R]=p.useState(null),[I,G]=p.useState(null),[y,T]=p.useState("setup"),[v,H]=p.useState([]),[k,E]=p.useState(0),[W,z]=p.useState(1),[O,L]=p.useState(!1),[g,S]=p.useState(null),[f,V]=p.useState(null),[J,he]=p.useState([]),[re,oe]=p.useState([]),[M,_]=p.useState(null),[pe,Q]=p.useState(!1),[b,q]=p.useState(null),[U,ie]=p.useState(!1);p.useEffect(()=>{ce()},[x]),p.useEffect(()=>{if(!a||U)return;(async()=>{var s,r;try{console.log("DMCombatView: Loading saved combat setup for partyId:",a);const c=await C.getCombatSetup(a);if(c&&(console.log("DMCombatView: Loading saved combat setup:",c),c.gridSize&&w(c.gridSize),c.combatState&&T(c.combatState),c.combatState==="active"&&(c.initiativeOrder&&H(c.initiativeOrder),c.currentTurn!==void 0&&E(c.currentTurn),c.round&&z(c.round)),c.combatants)){const u=c.combatants.filter(h=>h.type==="enemy");o(u);const j=[];for(let h=0;h<(((s=c.gridSize)==null?void 0:s.height)||x.height);h++){const A=[];for(let F=0;F<(((r=c.gridSize)==null?void 0:r.width)||x.width);F++)A.push({x:F,y:h,combatant:null,type:"empty"});j.push(A)}c.combatants.forEach(h=>{if(h.position&&h.position.x!==void 0&&h.position.y!==void 0){const A=h.position.x,F=h.position.y;A>=0&&A<j[0].length&&F>=0&&F<j.length&&(j[F][A]={x:A,y:F,combatant:h,type:h.type})}}),console.log("DMCombatView: Restored combat grid with combatants:",c.combatants.length),m(j)}ie(!0)}catch(c){console.error("Error loading saved combat setup:",c),ie(!0)}})()},[a,U]),p.useEffect(()=>{if(!a||!U)return;console.log("DMCombatView: Setting up campaign story listener for partyId:",a);let t=null;try{t=le.listenToCampaignStory(a,s=>{if(s&&s.combat&&(console.log("DMCombatView: Received campaign story update with combat data:",s.combat),s.combat.active&&(T("active"),H(s.combat.initiativeOrder||[]),E(s.combat.currentTurn||0),z(s.combat.round||1),s.combat.initiativeOrder&&s.combat.initiativeOrder.length>0))){const r=[];for(let u=0;u<x.height;u++){const j=[];for(let h=0;h<x.width;h++)j.push({x:h,y:u,combatant:null,type:"empty"});r.push(j)}s.combat.initiativeOrder.forEach(u=>{if(u.position&&u.position.x!==void 0&&u.position.y!==void 0){const j=u.position.x,h=u.position.y;j>=0&&j<r[0].length&&h>=0&&h<r.length&&(r[h][j]={x:j,y:h,combatant:u,type:u.type})}}),m(r);const c=s.combat.initiativeOrder.filter(u=>u.type==="enemy");o(c)}})}catch(s){console.error("DMCombatView: Error setting up campaign story listener:",s)}return()=>{console.log("DMCombatView: Cleaning up campaign story listener for partyId:",a),t&&typeof t=="function"&&t()}},[a,U]),p.useEffect(()=>{if(!a||!U)return;console.log("DMCombatView: Setting up combat state listener for partyId:",a);let t=null;try{t=C.listenToCombatState(a,s=>{if(console.log("DMCombatView: Received combat state update:",s),s&&(H(s.initiativeOrder||[]),E(s.currentTurn||0),z(s.round||1),T(s.active?"active":"setup"),s.initiativeOrder&&s.initiativeOrder.length>0)){const r=[];for(let u=0;u<x.height;u++){const j=[];for(let h=0;h<x.width;h++)j.push({x:h,y:u,combatant:null,type:"empty"});r.push(j)}s.initiativeOrder.forEach(u=>{if(u.position&&u.position.x!==void 0&&u.position.y!==void 0){const j=u.position.x,h=u.position.y;j>=0&&j<r[0].length&&h>=0&&h<r.length&&(r[h][j]={x:j,y:h,combatant:u,type:u.type})}}),m(r);const c=s.initiativeOrder.filter(u=>u.type==="enemy");o(c)}})}catch(s){console.error("DMCombatView: Error setting up combat state listener:",s)}return()=>{console.log("DMCombatView: Cleaning up combat state listener for partyId:",a),t&&typeof t=="function"&&t()}},[a,U]),p.useEffect(()=>{const s=setTimeout(async()=>{a&&(n.length>0||y!=="setup")&&(console.log("DMCombatView: Saving combat state to database"),await Y())},1e3);return()=>clearTimeout(s)},[n,y,v,k,W,a]),p.useEffect(()=>{if(y==="active"&&v.length>0){const t=v[k];if(t){const s=setTimeout(()=>{Ee(t.id)},100);return()=>clearTimeout(s)}}},[k,v,y]);const ce=()=>{const t=[];for(let s=0;s<x.height;s++){const r=[];for(let c=0;c<x.width;c++)r.push({x:c,y:s,combatant:null,type:"empty"});t.push(r)}m(t)},be=p.useCallback(t=>{const s=C.createEnemyFromMonster(t);o(r=>[...r,s])},[]),ge=p.useCallback(t=>{o(s=>s.filter(r=>r.id!==t)),m(s=>s.map(r=>r.map(c=>{var u;return((u=c.combatant)==null?void 0:u.id)===t?{...c,combatant:null,type:"empty"}:c})))},[]),de=async(t,s,r)=>{s<0||s>=x.width||r<0||r>=x.height||(m(c=>c.map(u=>u.map(j=>{var h;return((h=j.combatant)==null?void 0:h.id)===t.id?{...j,combatant:null,type:"empty"}:j}))),m(c=>c.map((u,j)=>u.map((h,A)=>A===s&&j===r?{...h,combatant:t,type:t.type}:h))),t.type==="enemy"&&o(c=>c.map(u=>u.id===t.id?{...u,position:{x:s,y:r}}:u)),await Y())},Y=async()=>{try{const t=[];if(l.forEach(s=>{const r=X(s.id);r&&t.push({id:s.userId||s.id||"",name:s.name||"",type:"player",initiativeModifier:Math.floor(((s.dexterity||10)-10)/2),position:r,hp:s.hp||0,maxHp:s.maxHp||0,ac:s.ac||10,spells:s.spells||[],character:{id:s.id||"",name:s.name||"",dexterity:s.dexterity||10,hp:s.hp||0,maxHp:s.maxHp||0,ac:s.ac||10,spells:s.spells||[]}})}),n.forEach(s=>{s.position&&t.push({id:s.id||"",name:s.name||"",type:"enemy",initiativeModifier:s.initiativeModifier||0,position:s.position,hp:s.hp||0,maxHp:s.maxHp||0,ac:s.ac||10,spells:s.spells||[],monster:s.monster?{name:s.monster.name||"",hp:s.monster.hp||"1d8",ac:s.monster.ac||10,stats:s.monster.stats||{str:10,dex:10,con:10,int:10,wis:10,cha:10},actions:s.monster.actions||[],description:s.monster.description||""}:null})}),await C.saveCombatSetup(a,{combatants:t,gridSize:x,combatState:y,initiativeOrder:y==="active"?v:[],currentTurn:y==="active"?k:0,round:y==="active"?W:1}),y==="active"&&v.length>0)try{const s=await $(a);if(s){const r={...s,combat:{...s==null?void 0:s.combat,active:!0,initiativeOrder:v,currentTurn:k,round:W,lastUpdated:new Date}},c=C.cleanDataForFirestore(r);await B(s.id,c)}}catch(s){console.error("Error updating main combat fields:",s)}}catch(t){console.error("Error saving combat state:",t)}},fe=async(t,s)=>{P&&(await de(P,t,s),R(null))},ve=(t,s)=>{const r=d[s][t];r.combatant&&G(r.combatant)},je=t=>{t.preventDefault()},Ne=async(t,s)=>{I&&(await de(I,t,s),G(null))},we=async()=>{try{L(!0);const t=[];if(l.forEach(r=>{const c=X(r.id);c&&t.push({id:r.userId||r.id||"",name:r.name||"",type:"player",initiativeModifier:Math.floor(((r.dexterity||10)-10)/2),position:c,hp:r.hp||0,maxHp:r.maxHp||0,ac:r.ac||10,spells:r.spells||[],character:{id:r.id||"",name:r.name||"",dexterity:r.dexterity||10,hp:r.hp||0,maxHp:r.maxHp||0,ac:r.ac||10,spells:r.spells||[]}})}),n.forEach(r=>{r.position&&t.push({id:r.id||"",name:r.name||"",type:"enemy",initiativeModifier:r.initiativeModifier||0,position:r.position,hp:r.hp||0,maxHp:r.maxHp||0,ac:r.ac||10,spells:r.spells||[],monster:r.monster?{name:r.monster.name||"",hp:r.monster.hp||"1d8",ac:r.monster.ac||10,stats:r.monster.stats||{str:10,dex:10,con:10,int:10,wis:10,cha:10},actions:r.monster.actions||[],description:r.monster.description||""}:null})}),t.length===0){alert("Please position at least one combatant on the grid before rolling initiative.");return}const s=await C.rollInitiative(a,t);H(s),E(0),z(1),T("initiative")}catch(t){console.error("Error rolling initiative:",t),alert("Failed to roll initiative")}finally{L(!1)}},X=p.useCallback(t=>{var s;for(let r=0;r<d.length;r++)for(let c=0;c<d[r].length;c++)if(((s=d[r][c].combatant)==null?void 0:s.id)===t)return{x:c,y:r};return null},[d]),ye=async()=>{T("active");try{await Y()}catch(t){console.error("Error saving combat state when starting combat:",t)}i&&i({initiativeOrder:v,combatGrid:d,selectedEnemies:n,partyCharacters:l})},Ce=async()=>{try{const t=await C.nextTurn(a);E(t.currentTurn),z(t.round),S(null),V(null),_(null)}catch(t){console.error("Error advancing turn:",t)}},Se=async()=>{try{await C.endCombat(a),T("setup"),H([]),E(0),z(1),o([]),S(null),V(null),_(null),ce()}catch(t){console.error("Error ending combat:",t)}},Z=p.useMemo(()=>v.length===0||k>=v.length?null:v[k],[v,k]),D=Z,Ee=p.useCallback(async t=>{try{const[s,r]=await Promise.all([C.getAvailableActions(a,t),C.getValidTargets(a,t,g==null?void 0:g.name)]);he(s),oe(r)}catch(s){(!s.message.includes("No active combat")||y==="active")&&console.error("Error updating combat options:",s)}},[a,g==null?void 0:g.name,y]),Me=async()=>{if(!g||!f){alert("Please select both an action and a target.");return}if(g.name==="Move"){try{L(!0);const s=Z,r=await C.performAction(a,s.id,f.id,g.name,null);_(r),S(null),V(null)}catch(s){console.error("Error performing movement:",s),alert("Failed to perform movement")}finally{L(!1)}return}q({action:g,target:f,combatant:Z}),Q(!0)},Pe=async t=>{if(b)try{L(!0);const s=!b.action.name.includes("Move");let r=null;if(s){r={attack:t.total};const u=b.target.ac||10;if(t.total>=u){q(h=>({...h,attackRoll:t.total,isHit:!0})),Q(!1);return}}const c=await C.performAction(a,b.combatant.id,b.target.id,b.action.name,r);_(c),S(null),V(null),q(null)}catch(s){console.error("Error performing action:",s),alert("Failed to perform action")}finally{L(!1)}},De=async t=>{if(b)try{L(!0);const s={attack:b.attackRoll,damage:t.total},r=await C.performAction(a,b.combatant.id,b.target.id,b.action.name,s);_(r),S(null),V(null),q(null)}catch(s){console.error("Error performing action:",s),alert("Failed to perform action")}finally{L(!1)}},Re=p.useCallback(async t=>{if(S(t),V(null),D)try{const s=await C.getValidTargets(a,D.id,t.name);oe(s)}catch(s){console.error("Error getting targets for action:",s)}},[a,D]);return e.jsxs("div",{className:"fantasy-card max-w-7xl mx-auto",children:[e.jsxs("div",{className:"flex items-center justify-between mb-6",children:[e.jsx("h3",{className:"text-xl font-bold text-slate-100",children:"⚔️ Combat Setup"}),e.jsxs("div",{className:"flex gap-2",children:[y==="setup"&&e.jsx("button",{onClick:we,disabled:O||n.length===0,className:"bg-gradient-to-r from-red-500 to-red-600 hover:from-red-600 hover:to-red-700 text-white font-semibold py-2 px-4 rounded-lg transition-all duration-300 text-sm disabled:opacity-50",children:O?"Rolling...":"🎲 Roll Initiative"}),y==="initiative"&&e.jsxs(e.Fragment,{children:[e.jsx("button",{onClick:async()=>await ye(),className:"bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 text-white font-semibold py-2 px-4 rounded-lg transition-all duration-300 text-sm",children:"⚔️ Start Combat"}),e.jsx("button",{onClick:()=>{le.updatePlayerView(a,"combat")},className:"bg-gradient-to-r from-purple-500 to-purple-600 hover:from-purple-600 hover:to-purple-700 text-white font-semibold py-2 px-4 rounded-lg transition-all duration-300 text-sm",children:"👁️ Show to Players"}),e.jsx("button",{onClick:()=>T("setup"),className:"bg-gradient-to-r from-gray-500 to-gray-600 hover:from-gray-600 hover:to-gray-700 text-white font-semibold py-2 px-4 rounded-lg transition-all duration-300 text-sm",children:"↩️ Back to Setup"})]}),y==="active"&&e.jsxs(e.Fragment,{children:[e.jsx("button",{onClick:()=>{le.updatePlayerView(a,"combat")},className:"bg-gradient-to-r from-purple-500 to-purple-600 hover:from-purple-600 hover:to-purple-700 text-white font-semibold py-2 px-4 rounded-lg transition-all duration-300 text-sm",children:"👁️ Show to Players"}),e.jsx("button",{onClick:Se,className:"bg-gradient-to-r from-gray-500 to-gray-600 hover:from-gray-600 hover:to-gray-700 text-white font-semibold py-2 px-4 rounded-lg transition-all duration-300 text-sm",children:"🏁 End Combat"})]})]})]}),(y==="initiative"||y==="active")&&e.jsxs("div",{className:"mb-6 p-4 bg-slate-700 rounded-lg",children:[e.jsxs("div",{className:"flex items-center justify-between mb-2",children:[e.jsxs("div",{children:[e.jsx("span",{className:"text-slate-300",children:"Round: "}),e.jsx("span",{className:"text-amber-400 font-bold",children:W})]}),e.jsxs("div",{children:[e.jsx("span",{className:"text-slate-300",children:"Turn: "}),e.jsx("span",{className:"text-amber-400 font-bold",children:k+1}),e.jsxs("span",{className:"text-slate-400",children:[" / ",v.length]})]})]}),D&&e.jsxs("div",{className:"p-3 bg-slate-600 rounded",children:[e.jsx("span",{className:"text-slate-300",children:"Current: "}),e.jsx("span",{className:`font-bold ${D.type==="player"?"text-blue-400":"text-red-400"}`,children:D.name}),e.jsxs("span",{className:"text-slate-400 ml-2",children:["(Initiative: ",D.initiative,")"]})]})]}),e.jsx("div",{className:"flex justify-center mb-6",children:e.jsxs("div",{className:"w-full max-w-4xl",children:[e.jsxs("div",{className:"fantasy-card bg-slate-800/50 mb-6",children:[e.jsxs("div",{className:"flex items-center justify-between mb-4",children:[e.jsx("h4",{className:"text-lg font-semibold text-slate-200",children:"🗺️ Combat Grid"}),e.jsxs("div",{className:"flex gap-2",children:[e.jsx("button",{onClick:()=>w({width:8,height:6}),className:`px-2 py-1 text-xs rounded ${x.width===8?"bg-amber-600":"bg-slate-600"}`,children:"8x6"}),e.jsx("button",{onClick:()=>w({width:12,height:8}),className:`px-2 py-1 text-xs rounded ${x.width===12?"bg-amber-600":"bg-slate-600"}`,children:"12x8"}),e.jsx("button",{onClick:()=>w({width:16,height:10}),className:`px-2 py-1 text-xs rounded ${x.width===16?"bg-amber-600":"bg-slate-600"}`,children:"16x10"})]})]}),e.jsx("div",{className:"bg-slate-900 border border-slate-600 rounded-lg p-4 overflow-auto",children:e.jsx("div",{className:"inline-block",children:d.map((t,s)=>e.jsx("div",{className:"flex",children:t.map((r,c)=>e.jsx("div",{onClick:()=>fe(c,s),onDragStart:()=>ve(c,s),onDragOver:je,onDrop:()=>Ne(c,s),draggable:r.combatant!==null,className:`w-12 h-12 border border-slate-600 flex items-center justify-center text-sm cursor-pointer transition-colors hover:border-amber-400 ${r.combatant?r.combatant.type==="player"?"bg-blue-600/50 border-blue-500":"bg-red-600/50 border-red-500":"bg-slate-800 hover:bg-slate-700"}`,title:`${c}, ${s}${r.combatant?` - ${r.combatant.name}`:""}`,children:r.combatant?e.jsxs("div",{className:"text-center",children:[e.jsx("div",{className:"text-lg",children:r.combatant.type==="player"?"👤":"👹"}),e.jsx("div",{className:"text-xs text-slate-300",children:r.combatant.name.substring(0,3)})]}):e.jsx("span",{className:"text-slate-500",children:"·"})},`${c}-${s}`))},s))})}),e.jsxs("div",{className:"mt-4",children:[e.jsx("h5",{className:"text-sm font-semibold text-slate-300 mb-2",children:"Place Combatants:"}),e.jsxs("div",{className:"grid grid-cols-2 gap-2",children:[e.jsxs("div",{children:[e.jsx("h6",{className:"text-xs font-semibold text-blue-400 mb-1",children:"Players:"}),e.jsx("div",{className:"space-y-1",children:l.map(t=>e.jsxs("button",{onClick:()=>R({id:t.id,name:t.name,type:"player",hp:t.hp,maxHp:t.maxHp,ac:t.ac,spells:t.spells||[],character:t}),className:`w-full text-left p-2 rounded text-xs transition-colors ${(P==null?void 0:P.id)===t.id?"bg-blue-600 text-white":"bg-slate-700 text-slate-300 hover:bg-slate-600"}`,children:[t.name," (HP: ",t.hp,"/",t.maxHp,")"]},t.id))})]}),e.jsxs("div",{children:[e.jsx("h6",{className:"text-xs font-semibold text-red-400 mb-1",children:"Enemies:"}),e.jsx("div",{className:"space-y-1",children:n.map(t=>e.jsxs("button",{onClick:()=>R(t),className:`w-full text-left p-2 rounded text-xs transition-colors ${(P==null?void 0:P.id)===t.id?"bg-red-600 text-white":"bg-slate-700 text-slate-300 hover:bg-slate-600"}`,children:[t.name," (HP: ",t.hp,"/",t.maxHp,")"]},t.id))})]})]})]})]}),(y==="initiative"||y==="active")&&v.length>0&&e.jsxs("div",{className:"fantasy-card bg-slate-800/50 mb-6",children:[e.jsx("h4",{className:"text-lg font-semibold text-slate-200 mb-3",children:"📋 Initiative Order:"}),e.jsx("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-2 max-h-48 overflow-y-auto",children:v.map((t,s)=>e.jsxs("div",{className:`flex items-center justify-between p-2 rounded transition-colors ${s===k?"bg-amber-600/30 border border-amber-500":"bg-slate-700 hover:bg-slate-600"}`,children:[e.jsxs("div",{className:"flex items-center gap-2",children:[e.jsx("span",{className:`text-sm font-medium ${t.type==="player"?"text-blue-400":"text-red-400"}`,children:t.name}),e.jsxs("span",{className:"text-xs text-slate-400",children:["(",t.type,")"]})]}),e.jsxs("div",{className:"flex items-center gap-2",children:[e.jsxs("span",{className:"text-xs text-slate-400",children:[t.roll," + ",t.modifier," = ",t.initiative]}),s===k&&e.jsx("span",{className:"text-amber-400 text-sm",children:"👑"})]})]},t.id))})]}),y==="active"&&D&&D.type==="enemy"&&e.jsxs("div",{className:"fantasy-card bg-slate-800/50 mb-6",children:[e.jsxs("h4",{className:"text-lg font-semibold text-slate-200 mb-3",children:["⚔️ ",D.name,"'s Turn (DM Control)"]}),M&&e.jsx("div",{className:"mb-4 p-3 bg-slate-700 rounded",children:M.action==="Move"?e.jsxs("div",{className:"text-sm",children:[e.jsxs("div",{children:[e.jsx("span",{className:"text-slate-300",children:M.combatant}),e.jsx("span",{className:"text-slate-400",children:" moved from "}),e.jsxs("span",{className:"text-amber-400",children:["(",M.oldPosition.x,", ",M.oldPosition.y,")"]}),e.jsx("span",{className:"text-slate-400",children:" to "}),e.jsxs("span",{className:"text-amber-400",children:["(",M.newPosition.x,", ",M.newPosition.y,")"]})]}),e.jsxs("div",{className:"text-xs text-slate-400 mt-1",children:["Distance moved: ",M.movementDistance," square(s)"]})]}):e.jsxs(e.Fragment,{children:[e.jsxs("div",{className:"text-sm",children:[e.jsx("span",{className:"text-slate-300",children:M.attacker}),e.jsx("span",{className:"text-slate-400",children:" attacks "}),e.jsx("span",{className:"text-slate-300",children:M.target}),e.jsx("span",{className:"text-slate-400",children:" with "}),e.jsx("span",{className:"text-amber-400",children:M.action})]}),e.jsxs("div",{className:"text-sm mt-1",children:[e.jsx("span",{className:"text-slate-400",children:"Roll: "}),e.jsx("span",{className:"text-amber-400",children:M.attackRoll}),e.jsx("span",{className:"text-slate-400",children:" vs AC "}),e.jsx("span",{className:"text-amber-400",children:M.targetAC}),e.jsx("span",{className:`ml-2 ${M.isHit?"text-green-400":"text-red-400"}`,children:M.isHit?"HIT!":"MISS!"})]}),M.isHit&&e.jsxs("div",{className:"text-sm mt-1",children:[e.jsx("span",{className:"text-slate-400",children:"Damage: "}),e.jsx("span",{className:"text-red-400",children:M.damageDetails}),e.jsxs("span",{className:"text-slate-400 ml-2",children:["(",M.target," HP: ",M.targetNewHp,")"]})]})]})}),e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4",children:[e.jsxs("div",{children:[e.jsx("h5",{className:"text-sm font-semibold text-slate-300 mb-2",children:"Available Actions:"}),e.jsx("div",{className:"space-y-2",children:J.map(t=>e.jsxs("button",{onClick:()=>Re(t),className:`w-full text-left p-2 rounded transition-colors ${(g==null?void 0:g.name)===t.name?"bg-amber-600 text-white":"bg-slate-700 text-slate-300 hover:bg-slate-600"}`,children:[e.jsx("div",{className:"font-medium",children:t.name}),e.jsxs("div",{className:"text-xs text-slate-400",children:[t.type," • Attack: ",t.attack," • Damage: ",t.damage]})]},t.name))})]}),e.jsxs("div",{children:[e.jsx("h5",{className:"text-sm font-semibold text-slate-300 mb-2",children:(g==null?void 0:g.name)==="Move"?"Valid Positions:":"Valid Targets:"}),e.jsxs("div",{className:"space-y-2",children:[re.map(t=>e.jsxs("button",{onClick:()=>V(t),className:`w-full text-left p-2 rounded transition-colors ${(f==null?void 0:f.id)===t.id?"bg-amber-600 text-white":"bg-slate-700 text-slate-300 hover:bg-slate-600"}`,children:[e.jsx("div",{className:"font-medium",children:t.name}),e.jsx("div",{className:"text-xs text-slate-400",children:t.type==="position"?`Position (${t.x}, ${t.y}) - Distance: ${t.distance}`:`HP: ${t.hp}/${t.maxHp} • AC: ${t.ac}`})]},t.id)),re.length===0&&e.jsx("p",{className:"text-slate-400 text-sm italic",children:(g==null?void 0:g.name)==="Move"?"No valid movement positions available":"No valid targets available"})]})]})]}),g&&!g.name.includes("Move")&&e.jsx("div",{className:"mt-3 p-2 bg-slate-700/50 rounded border border-slate-600/50",children:e.jsxs("div",{className:"text-xs text-slate-300",children:[e.jsx("span",{className:"font-semibold",children:"Range:"})," ",g.name==="Basic Attack"?"Melee (1 square)":g.name==="Ranged Attack"?"Ranged (3 squares)":g.range||"Melee (1 square)"]})}),e.jsx("div",{className:"mt-4",children:e.jsx("button",{onClick:Me,disabled:!g||!f||O,className:"w-full bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 text-white font-semibold py-3 px-4 rounded-lg transition-all duration-300 disabled:opacity-50",children:O?"Performing Action...":`⚔️ Perform ${(g==null?void 0:g.name)||"Action"}`})}),e.jsx("div",{className:"mt-2",children:e.jsx("button",{onClick:Ce,disabled:O,className:"w-full bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white font-semibold py-2 px-4 rounded-lg transition-all duration-300 disabled:opacity-50",children:"⏭️ End Turn & Continue"})})]}),y==="active"&&D&&D.type==="player"&&e.jsxs("div",{className:"fantasy-card bg-slate-800/50 mb-6",children:[e.jsxs("h4",{className:"text-lg font-semibold text-slate-200 mb-3",children:["⚔️ ",D.name,"'s Turn (Player Control)"]}),e.jsxs("div",{className:"p-4 bg-blue-600/20 border border-blue-500/30 rounded-lg",children:[e.jsxs("div",{className:"flex items-center justify-between",children:[e.jsxs("div",{children:[e.jsxs("p",{className:"text-blue-200 mb-2",children:["It's ",e.jsx("span",{className:"font-bold text-blue-300",children:D.name}),"'s turn!"]}),e.jsx("p",{className:"text-blue-300 text-sm",children:"The player should be controlling their actions through their own interface."})]}),e.jsx("div",{className:"text-4xl",children:"👤"})]}),e.jsxs("div",{className:"mt-3 flex items-center gap-2",children:[e.jsx("div",{className:"animate-pulse w-2 h-2 bg-blue-400 rounded-full"}),e.jsx("span",{className:"text-blue-300 text-sm",children:"Waiting for player action..."})]})]})]})]})}),e.jsxs("div",{className:"grid grid-cols-1 lg:grid-cols-2 gap-6",children:[e.jsxs("div",{className:"fantasy-card bg-slate-800/50",children:[e.jsx("h4",{className:"text-lg font-semibold text-slate-200 mb-4",children:"👹 Enemy Selection"}),e.jsxs("div",{className:"mb-4",children:[e.jsx("h5",{className:"text-sm font-semibold text-slate-300 mb-2",children:"Selected Enemies:"}),e.jsxs("div",{className:"space-y-2 max-h-40 overflow-y-auto",children:[n.map(t=>e.jsxs("div",{className:"flex items-center justify-between bg-slate-700 p-2 rounded",children:[e.jsxs("div",{children:[e.jsx("div",{className:"font-medium text-red-400",children:t.name}),e.jsxs("div",{className:"text-xs text-slate-400",children:["HP: ",t.hp," | AC: ",t.ac," | Initiative: +",t.initiativeModifier]})]}),e.jsx("button",{onClick:()=>ge(t.id),className:"text-red-400 hover:text-red-300 text-sm",children:"✕"})]},t.id)),n.length===0&&e.jsx("p",{className:"text-slate-400 text-sm",children:"No enemies selected"})]})]}),e.jsxs("div",{children:[e.jsx("h5",{className:"text-sm font-semibold text-slate-300 mb-2",children:"Available Monsters:"}),e.jsx("div",{className:"space-y-2 max-h-60 overflow-y-auto",children:xe.map(t=>e.jsxs("button",{onClick:()=>be(t),className:"w-full text-left p-2 bg-slate-700 hover:bg-slate-600 rounded transition-colors",children:[e.jsx("div",{className:"font-medium text-slate-200",children:t.name}),e.jsxs("div",{className:"text-xs text-slate-400",children:["CR ",t.cr," • HP ",t.hp," • AC ",t.ac]})]},t.id))})]})]}),e.jsxs("div",{className:"fantasy-card bg-slate-800/50",children:[e.jsx("h4",{className:"text-lg font-semibold text-slate-200 mb-4",children:"📊 Combat Status"}),e.jsxs("div",{className:"mb-4",children:[e.jsx("h5",{className:"text-sm font-semibold text-blue-400 mb-2",children:"Players:"}),e.jsx("div",{className:"space-y-2",children:l.map(t=>{const s=X(t.id);return e.jsxs("div",{className:"bg-slate-700 p-2 rounded",children:[e.jsx("div",{className:"font-medium text-blue-400",children:t.name}),e.jsxs("div",{className:"text-xs text-slate-400",children:["HP: ",t.hp,"/",t.maxHp," • AC: ",t.ac,s&&` • Position: (${s.x}, ${s.y})`]})]},t.id)})})]}),e.jsxs("div",{children:[e.jsx("h5",{className:"text-sm font-semibold text-red-400 mb-2",children:"Enemies:"}),e.jsxs("div",{className:"space-y-2",children:[n.map(t=>{const s=X(t.id);return e.jsxs("div",{className:"bg-slate-700 p-2 rounded",children:[e.jsx("div",{className:"font-medium text-red-400",children:t.name}),e.jsxs("div",{className:"text-xs text-slate-400",children:["HP: ",t.hp,"/",t.maxHp," • AC: ",t.ac,s&&` • Position: (${s.x}, ${s.y})`]})]},t.id)}),n.length===0&&e.jsx("p",{className:"text-slate-400 text-sm",children:"No enemies in combat"})]})]})]})]}),e.jsx(Fe,{isOpen:pe,onClose:()=>{Q(!1),q(null)},onRollComplete:b!=null&&b.isHit?De:Pe,diceNotation:b!=null&&b.isHit?b.action.damage||"1d6":"1d20",rollType:b!=null&&b.isHit?"Damage Roll":b!=null&&b.action.name.includes("Move")?"Movement":"Attack Roll",modifier:b!=null&&b.isHit||b!=null&&b.action.name.includes("Move")?0:Math.floor(((((ue=(me=b==null?void 0:b.combatant)==null?void 0:me.character)==null?void 0:ue.dexterity)||10)-10)/2)})]})}),Je=Oe;export{Fe as D,_e as a,Ke as b,le as c,Ue as d,Je as e,Xe as f,qe as g,We as l};
